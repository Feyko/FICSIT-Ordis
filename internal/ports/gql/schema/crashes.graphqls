type Crash {
    name: String!
    description: String
    regexes: [String!]!
    response: Response!
}

input CrashCreation {
    name: String!
    description: String
    regexes: [String!]!
    response: ResponseInput!
}

input CrashUpdate {
    name: String
    description: String
    regexes: [String!]
    response: ResponseInput
}

type CrashMatch {
    matchedText: String!
    crash: Crash!
    charSpan: Span!
}

extend type Query {
    listAllCrashes: [Crash!]
    findCrash(name: String!): Crash
    crashAnalysis(text: String!): [CrashMatch!]
}

extend type Mutation {
    createCrash(Crash: CrashCreation!): Boolean!
    updateCrash(name: String!, Crash: CrashUpdate!): Crash
    deleteCrash(name: String!): Boolean!
}